function [gui,myui] = NUCLEUSmod_createPanelCPS(data,gui,myui)
%NUCLEUSmod_createPanelCPS creates pressure panel
%
% Syntax:
%       [gui,myui] = NUCLEUSmod_createPanelCPS(data,gui,myui)
%
% Inputs:
%       data - figure data structure
%       gui - figure gui elements structure
%       myui - individual GUI settings structure
%
% Outputs:
%       gui
%       myui
%
% Example:
%       [gui,myui] = NUCLEUSmod_createPanelCPS(data,gui,myui)
%
% Other m-files required:
%       findjobj.m
% Subfunctions:
%       none
% MAT-files required:
%       none
%
% See also: NUCLEUSmod
% Author: see AUTHORS.md
% email: see AUTHORS.md
% License: MIT License (at end)

%------------- BEGIN CODE --------------

%% create all boxes
gui.panels.cps.VBox = uix.VBox('Parent',gui.panels.cps.main,...
    'Spacing',3,'Padding',3);

% interfacial tension (IFT) % contact angle (CA)
gui.panels.cps.HBox1 = uix.HBox('Parent',gui.panels.cps.VBox,...
    'Spacing',3);
% loglin scale & pressure units
gui.panels.cps.HBox2 = uix.HBox('Parent',gui.panels.cps.VBox,...
    'Spacing',3);
% pressure range and number of total points
gui.panels.cps.HBox3 = uix.HBox('Parent',gui.panels.cps.VBox,...
    'Spacing',3);
% RUN button
gui.panels.cps.HBox4 = uix.HBox('Parent',gui.panels.cps.VBox,...
    'Spacing',3);
% drainage & imbibition lists
gui.panels.cps.HBox5 = uix.HBox('Parent',gui.panels.cps.VBox,...
    'Spacing',3);

% adjust heights
set(gui.panels.cps.VBox,'Heights',[25 25 25 25 -1]);

%% interfacial tension (IFT) % contact angle (CA)
gui.text_handles.sigma = uicontrol('Parent',gui.panels.cps.HBox1,...
    'Style','text','FontSize',myui.fontsize,'HorizontalAlignment','center',...
    'String','IFT [N/m]');
tstr = ['<HTML>Set interfacial tension between water and gas (air)<br><br>',...
    '<u>Default value:</u><br>',...
    '<b>0.0728 N/m</b><br>'];
gui.edit_handles.sigma = uicontrol('Parent',gui.panels.cps.HBox1,...
    'Style','edit','String',num2str(data.pressure.sigma),'FontSize',myui.fontsize,...
    'UserData',struct('Tooltipstr',tstr,'defaults',[data.pressure.sigma 1 1]),...
    'Tag','pressure_sigma','Enable','on','Callback',@onEditValue);
gui.text_handles.theta = uicontrol('Parent',gui.panels.cps.HBox1,...
    'Style','text','FontSize',myui.fontsize,'HorizontalAlignment','center',...
    'String',['CA ',char(hex2dec('03B8')),' [°]']);
tstr = ['<HTML>Set surface contact angle &theta of water<br><br>',...
    '<u>Available options:</u><br>',...
    '<b>0°</b> to <b> &lt 90°</b> <br><br>',...
    '<u>Default value:</u><br>',...
    '<b>0°</b><br>'];
gui.edit_handles.theta = uicontrol('Parent',gui.panels.cps.HBox1,...
    'Style','edit','String',num2str(data.pressure.theta),'FontSize',myui.fontsize,...
    'UserData',struct('Tooltipstr',tstr,'defaults',[data.pressure.theta 1 1]),...
    'Tag','pressure_theta','Enable','on','Callback',@onEditValue);
set(gui.panels.cps.HBox1,'Widths',[100 -1 100 -1]);

%% loglin scale & pressure units
gui.text_handles.loglin = uicontrol('Parent',gui.panels.cps.HBox2,...
    'Style','text','FontSize',myui.fontsize,'HorizontalAlignment','center',...
    'String','log / lin scale');
tstr = ['<HTML>Set pressure scale to log or linear<br><br>',...
    '<u>Available options:</u><br>',...
    '<b>log</b> or <b>lin</b> <br><br>',...
    '<u>Default value:</u><br>',...
    '<b>log</b> <br>'];
gui.popup_handles.loglin = uicontrol('Parent',gui.panels.cps.HBox2,...
    'Style','popup','String',{'log','lin'},...
    'Value',1,'FontSize',myui.fontsize,'UserData',struct('Tooltipstr',tstr),...
    'Callback',@onPopupPressureLoglin);
gui.text_handles.units = uicontrol('Parent',gui.panels.cps.HBox2,...
    'Style','text','FontSize',myui.fontsize,'HorizontalAlignment','center',...
    'String','pressure unit');
tstr = ['<HTML>Set pressure unit<br><br>',...
    '<u>Available options:</u><br>',...
    '<b>Pa</b>, <b>kPa</b>, <b>MPa</b> and <b>bar</b> <br><br>',...
    '<u>Default value:</u><br>',...
    '<b>Pa</b><br>'];
gui.popup_handles.units = uicontrol('Parent',gui.panels.cps.HBox2,...
    'Style','popup','String',{'Pa','kPa','MPa','bar'},...
    'Value',1,'FontSize',myui.fontsize,'UserData',struct('Tooltipstr',tstr),...
    'Callback',@onPopupPressureUnits);
set(gui.panels.cps.HBox2,'Widths',[100 -1 100 -1]);

%% pressure range and number of total points
gui.text_handles.press_range = uicontrol('Parent',gui.panels.cps.HBox3,...
    'Style','text','FontSize',myui.fontsize,'HorizontalAlignment','center',...
    'String','pressure - min | max | # steps');
tstr = ['<HTML>Set minimum pressure value<br><br>',...
    '<u>Default value:</u><br>',...
    '<b>1000 Pa</b><br>'];
gui.edit_handles.press_range_min = uicontrol('Parent',gui.panels.cps.HBox3,...
    'Style','edit','String',num2str(data.pressure.range(1,1)),'FontSize',myui.fontsize,...
    'UserData',struct('Tooltipstr',tstr,'defaults',[data.pressure.range(1,1) 1 1]),...
    'Tag','pressure_range','Enable','on','Callback',@onEditValue);
tstr = ['<HTML>Set maximum pressure value<br><br>',...
    '<u>Default value:</u><br>',...
    '<b>100000 Pa</b><br>'];
gui.edit_handles.press_range_max = uicontrol('Parent',gui.panels.cps.HBox3,...
    'Style','edit','String',num2str(data.pressure.range(1,2)),'FontSize',myui.fontsize,...
    'UserData',struct('Tooltipstr',tstr,'defaults',[data.pressure.range(1,2) 1 2]),...
    'Tag','pressure_range','Enable','on','Callback',@onEditValue);
tstr = ['<HTML>Set total number of pressure values<br><br>',...
    '<u>Default value:</u><br>',...
    '<b>50</b><br>'];
gui.edit_handles.press_rangeN = uicontrol('Parent',gui.panels.cps.HBox3,...
    'Style','edit','String',num2str(data.pressure.rangeN),'FontSize',myui.fontsize,...
    'UserData',struct('Tooltipstr',tstr,'defaults',[data.pressure.rangeN 1 1]),...
    'Tag','pressure_rangeN','Enable','on','Callback',@onEditValue);
set(gui.panels.cps.HBox3,'Widths',[200 -1 -1 -1]);

%% RUN button
gui.text_handles.press_RUN = uicontrol('Parent',gui.panels.cps.HBox4,...
    'Style','text','FontSize',myui.fontsize,'HorizontalAlignment','center',...
    'String','calculate CPS');
gui.push_handles.press_RUN = uicontrol('Parent',gui.panels.cps.HBox4,...
    'Style','pushbutton','String','RUN','FontSize',myui.fontsize,'Tag','pressure',...
    'BackgroundColor','g','Enable','on','Callback',@onPushRun);
set(gui.panels.cps.HBox4,'Widths',[200 -1]);

%% drainage & imbibition lists
tstr = ['<HTML>Choose <b>drainage</b> and <b>imbibition</b> saturation levels for NMR forward calculation.<br><br>',...
    '<u>Hint:</u><br>',...
    'You can select multiple values with a context menu.<br>'];
gui.cm_handles.select = uicontextmenu(gui.figh);
gui.cm_handles.select_on = uimenu(gui.cm_handles.select,'Label','select all');
gui.cm_handles.select_off = uimenu(gui.cm_handles.select,'Label','deselect all');
gui.cm_handles.select_on_drain = uimenu(gui.cm_handles.select_on,...
    'Tag','select','Label','drainage','Callback',@onContextTableSelect);
gui.cm_handles.select_on_imb = uimenu(gui.cm_handles.select_on,...
    'Tag','select','Label','imbibition','Callback',@onContextTableSelect);
gui.cm_handles.select_off_drain = uimenu(gui.cm_handles.select_off,...
    'Tag','deselect','Label','drainage','Callback',@onContextTableSelect);
gui.cm_handles.select_off_imb = uimenu(gui.cm_handles.select_off,...
    'Tag','deselect','Label','imbibition','Callback',@onContextTableSelect);

gui.table_handles.pressure_table = uitable('Parent',gui.panels.cps.HBox5,...
    'Data',{data.pressure.range(1),1,false,0,false},...
    'ColumnFormat',({'numeric' 'numeric' 'logical' 'numeric' 'logical'}),...
    'ColumnEditable',[false false true false true],'ColumnWidth',{80 80 49 80 49},...
    'ColumnName',{'p [Pa]','S-drain [-]','select','S-imb [-]','select'},...
    'UIContextMenu',gui.cm_handles.select,'UserData',struct('Tooltipstr',tstr),...
    'CellEditCallback',@onEditCPSTable,'RowName','numbered','FontSize',myui.fontsize);

return

%------------- END OF CODE --------------

%% License:
% MIT License
%
% Copyright (c) 2018 Thomas Hiller
%
% Permission is hereby granted, free of charge, to any person obtaining a copy
% of this software and associated documentation files (the "Software"), to deal
% in the Software without restriction, including without limitation the rights
% to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
% copies of the Software, and to permit persons to whom the Software is
% furnished to do so, subject to the following conditions:
%
% The above copyright notice and this permission notice shall be included in all
% copies or substantial portions of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
% SOFTWARE.