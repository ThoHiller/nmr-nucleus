function [gui,myui] = NUCLEUSmod_createPanelNMR(data,gui,myui)
%NUCLEUSmod_createPanelNMR creates NMR panel
%
% Syntax:
%       [gui,myui] = NUCLEUSmod_createPanelNMR(data,gui,myui)
%
% Inputs:
%       data - figure data structure
%       gui - figure gui elements structure
%       myui - individual GUI settings structure
%
% Outputs:
%       gui
%       myui
%
% Example:
%       [gui,myui] = NUCLEUSmod_createPanelNMR(data,gui,myui)
%
% Other m-files required:
%       findjobj.m
% Subfunctions:
%       none
% MAT-files required:
%       none
%
% See also: NUCLEUSmod
% Author: see AUTHORS.md
% email: see AUTHORS.md
% License: MIT License (at end)

%------------- BEGIN CODE --------------

%% create all boxes
gui.panels.nmr.VBox = uix.VBox('Parent',gui.panels.nmr.main,...
    'Spacing',3,'Padding',3);

% Tbulk & Tdiff
gui.panels.nmr.HBox1 = uix.HBox('Parent',gui.panels.nmr.VBox,...
    'Spacing',3);
% surface relaxivity rho & echo time TE & number of echos
gui.panels.nmr.HBox2 = uix.HBox('Parent',gui.panels.nmr.VBox,...
    'Spacing',3);
% RUN button
gui.panels.nmr.HBox3 = uix.HBox('Parent',gui.panels.nmr.VBox,...
    'Spacing',3);
% noise & porosity
gui.panels.nmr.HBox4 = uix.HBox('Parent',gui.panels.nmr.VBox,...
    'Spacing',3);

%% Tbulk & Tdiff
gui.text_handles.Tbulk = uicontrol('Parent',gui.panels.nmr.HBox1,...
    'Style','text','FontSize',myui.fontsize,'HorizontalAlignment','center',...
    'String','Tbulk [s]  |  Tdiff [s]');
tstr = ['<HTML>Bulk relaxation time in [s].<br><br>',...
    '1/T = 1/Ts + 1/<b>Tb</b> + 1/Td<br><br>',...
    '<u>Default value:</u><br>',...
    '<b>2</b><br>'];
gui.edit_handles.Tbulk = uicontrol('Parent',gui.panels.nmr.HBox1,...
    'Style','edit','String',num2str(data.nmr.Tbulk),'FontSize',myui.fontsize,...
    'UserData',struct('Tooltipstr',tstr,'defaults',[data.nmr.Tbulk 1 1]),...
    'Tag','nmr_Tbulk','Enable','on','Callback',@onEditValue);
tstr = ['<HTML>Diffusion relaxation time in [s].<br><br>',...
    '1/T = 1/Ts + 1/Tb + 1/<b>Td</b><br><br>',...
    '<b>Td</b> can be caluclated by<br><br>',...
    '<b>Td</b> = 12 / (D*(',char(hex2dec('03B3')),'*G*TE)<sup>2</sup> )<br><br>',...
    'with<br><br>',...
    'D = diffusion coefficent of water<br>',...
    char(hex2dec('03B3')),' = gyromagnetic ratio of hydrogen<br>',...
    'G = magnetic gradient<br>',...
    'TE = echo time<br><br>',...
    '<u>Default value:</u><br>',...
    '<b>1e6</b> (so that 1/<b>Td</b> is ignored)<br>'];
gui.edit_handles.Tdiff = uicontrol('Parent',gui.panels.nmr.HBox1,...
    'Style','edit','String',num2str(data.nmr.Tdiff),'FontSize',myui.fontsize,...
    'UserData',struct('Tooltipstr',tstr,'defaults',[data.nmr.Tdiff 1 1]),...
    'Tag','nmr_Tdiff','Enable','on','Callback',@onEditValue);
set(gui.panels.nmr.HBox1,'Widths',[200 -1 -1]);

%% surface relaxivity rho & echo time TE & number of echoes
gui.text_handles.rho = uicontrol('Parent',gui.panels.nmr.HBox2,...
    'Style','text','FontSize',myui.fontsize,'HorizontalAlignment','center',...
    'String',[char(hex2dec('03C1')),' [µm/s]  |  TE [µs]  |  # echoes']);
tstr = ['<HTML>Surface relaxivity in [µm/s].<br><br>',...
    '1/Ts = <b>rho</b>*S/V = <b>rho</b>*a/R.<br><br>',...
    '<u>Default value:</u><br>',...
    '<b>10</b><br>'];
gui.edit_handles.rho = uicontrol('Parent',gui.panels.nmr.HBox2,...
    'Style','edit','String',num2str(data.nmr.rho),'FontSize',myui.fontsize,...
    'UserData',struct('Tooltipstr',tstr,'defaults',[data.nmr.rho 1 1]),...
    'Tag','nmr_rho','Enable','on','Callback',@onEditValue);
tstr = ['<HTML>Echo time TE in [µs].<br><br>',...
    '<u>Default value:</u><br>',...
    '<b>1000</b><br>'];
gui.edit_handles.TE = uicontrol('Parent',gui.panels.nmr.HBox2,...
    'Style','edit','String',num2str(data.nmr.TE),'FontSize',myui.fontsize,...
    'UserData',struct('Tooltipstr',tstr,'defaults',[data.nmr.TE 1 1]),...
    'Tag','nmr_TE','Enable','on','Callback',@onEditValue);
tstr = ['<HTML>Number of echoes.<br><br>',...
    '<u>Default value:</u><br>',...
    '<b>1001</b><br>'];
gui.edit_handles.echosN = uicontrol('Parent',gui.panels.nmr.HBox2,...
    'Style','edit','String',num2str(data.nmr.echosN),'FontSize',myui.fontsize,...
    'UserData',struct('Tooltipstr',tstr,'defaults',[data.nmr.echosN 1 1]),...
    'Tag','nmr_echosN','Enable','on','Callback',@onEditValue);
set(gui.panels.nmr.HBox2,'Widths',[200 -1 -1 -1]);

%% RUN button
gui.text_handles.nmr_RUN = uicontrol('Parent',gui.panels.nmr.HBox3,...
    'Style','text','FontSize',myui.fontsize,'HorizontalAlignment','center',...
    'String','calculate NMR');
gui.push_handles.nmr_RUN = uicontrol('Parent',gui.panels.nmr.HBox3,...
    'Style','pushbutton','String','RUN','FontSize',myui.fontsize,'Tag','nmr',...
    'BackgroundColor','g','Enable','on','Callback',@onPushRun);
set(gui.panels.nmr.HBox3,'Widths',[200 -1]);

%% noise & porosity
tstr = ['<HTML>NMR data noise method.<br><br>',...
    'A noise level will be used globally for all NMR signals.<br>',...
    'A signal-to-ratio will be used individually on every single NMR signal.<br><br>',...
    '<u>Available options:</u><br>',...
    '<b>noise level</b> or <b>SNR</b> <br><br>',...
    '<u>Default value:</u><br>',...
    '<b>noise level</b> <br>'];
gui.popup_handles.noisetype = uicontrol('Parent',gui.panels.nmr.HBox4,...
    'Style','popup','String',{'noise level','SNR'},...
    'Value',1,'FontSize',myui.fontsize,'UserData',struct('Tooltipstr',tstr),...
    'Callback',@onPopupNMRNoiseType);
tstr = ['<HTML>NMR data noise.<br><br>',...
    '<u>Hint:</u><br>',...
    'You do not need to press RUN to add noise to the NMR signals.<br>',...
    'The raw NMR signals are stored internally and the noise is<br>',...
    'applied instantaneously.<br><br>',...
    '<u>Default value:</u><br>',...
    '<b>0</b><br>'];
gui.edit_handles.noise = uicontrol('Parent',gui.panels.nmr.HBox4,...
    'Style','edit','String',num2str(data.nmr.noise),'FontSize',myui.fontsize,...
    'UserData',struct('Tooltipstr',tstr,'defaults',[data.nmr.noise 1 1]),...
    'Tag','nmr_noise','Enable','on','Callback',@onEditValue);
gui.text_handles.porosity = uicontrol('Parent',gui.panels.nmr.HBox4,...
    'Style','text','FontSize',myui.fontsize,'HorizontalAlignment','center',...
    'String','porosity');
tstr = ['<HTML>Porosity value in the range [0, 1].<br><br>',...
    '<u>Note:</u><br>',...
    'This value is applied only as a scaling factor to the NMR amplitudes.<br>',...
    'Hence, saturation becomes water content.'];
gui.edit_handles.porosity = uicontrol('Parent',gui.panels.nmr.HBox4,...
    'Style','edit','String',num2str(data.nmr.porosity),'FontSize',myui.fontsize,...
    'UserData',struct('Tooltipstr',tstr,'defaults',[data.nmr.porosity 1 1]),...
    'Tag','nmr_porosity','Enable','on','Callback',@onEditValue);
set(gui.panels.nmr.HBox4,'Widths',[100 -1 100 -1]);

%% Java Hack to adjust vertical alignment of text fields
jh = findjobj(gui.text_handles.Tbulk);
jh.setVerticalAlignment(javax.swing.JLabel.CENTER);
jh = findjobj(gui.text_handles.rho);
jh.setVerticalAlignment(javax.swing.JLabel.CENTER);
jh = findjobj(gui.text_handles.nmr_RUN);
jh.setVerticalAlignment(javax.swing.JLabel.CENTER);
jh = findjobj(gui.text_handles.porosity);
jh.setVerticalAlignment(javax.swing.JLabel.CENTER);

return

%------------- END OF CODE --------------

%% License:
% MIT License
%
% Copyright (c) 2018 Thomas Hiller
%
% Permission is hereby granted, free of charge, to any person obtaining a copy
% of this software and associated documentation files (the "Software"), to deal
% in the Software without restriction, including without limitation the rights
% to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
% copies of the Software, and to permit persons to whom the Software is
% furnished to do so, subject to the following conditions:
%
% The above copyright notice and this permission notice shall be included in all
% copies or substantial portions of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
% SOFTWARE.